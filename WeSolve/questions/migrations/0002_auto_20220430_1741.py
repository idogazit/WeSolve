# Generated by Django 3.0.8 on 2022-04-30 14:41

from django.db import migrations, models
import django.db.models.deletion
import questions.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0002_auto_20220430_1741'),
        ('questions', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('examId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('year', models.IntegerField(default=2022)),
                ('semester', models.CharField(choices=[('A', 'A'), ('B', 'B')], default=('A', 'A'), max_length=1)),
                ('examType', models.CharField(choices=[('A', 'A'), ('B', 'B')], default=('A', 'A'), max_length=1)),
                ('courseName', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.Course', to_field='courseName')),
                ('teacher', models.ForeignKey(limit_choices_to={'isTeacher': True}, on_delete=django.db.models.deletion.DO_NOTHING, to='users.User', to_field='username')),
            ],
            options={
                'db_table': 'Exams',
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('labelId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('labelName', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'db_table': 'Labels',
            },
        ),
        migrations.CreateModel(
            name='LabelValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('labelValue', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'LabelValues',
            },
        ),
        migrations.CreateModel(
            name='QuestionLabel',
            fields=[
                ('questionLabelId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('labelValue', models.CharField(max_length=50)),
                ('labelName', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='questions.Label', to_field='labelName')),
                ('labeledByUser', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.User', to_field='username')),
            ],
            options={
                'db_table': 'QuestionLabels',
            },
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('solutionId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('solutionPic', models.ImageField(upload_to=questions.models.Solution.upload_location)),
            ],
            options={
                'db_table': 'Solutions',
            },
        ),
        migrations.CreateModel(
            name='SolutionRanking',
            fields=[
                ('solutionRankingId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rankingValue', models.CharField(choices=[('up', 'Upvote'), ('down', 'Downvote')], default=('up', 'Upvote'), max_length=10)),
                ('rankedByUser', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.User', to_field='username')),
                ('solutionId', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='questions.Solution')),
            ],
            options={
                'db_table': 'SolutionRankings',
            },
        ),
        migrations.RemoveField(
            model_name='question',
            name='author',
        ),
        migrations.RemoveField(
            model_name='question',
            name='content',
        ),
        migrations.RemoveField(
            model_name='question',
            name='created_at',
        ),
        migrations.RemoveField(
            model_name='question',
            name='id',
        ),
        migrations.RemoveField(
            model_name='question',
            name='slug',
        ),
        migrations.RemoveField(
            model_name='question',
            name='updated_at',
        ),
        migrations.AddField(
            model_name='question',
            name='questionId',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        migrations.AddField(
            model_name='question',
            name='questionPic',
            field=models.ImageField(blank=True, upload_to=questions.models.Question.upload_location),
        ),
        migrations.AlterModelTable(
            name='question',
            table='Questions',
        ),
        migrations.DeleteModel(
            name='Answer',
        ),
        migrations.AddField(
            model_name='solution',
            name='questionId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='questions.Question'),
        ),
        migrations.AddField(
            model_name='solution',
            name='uploadedByUser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.User', to_field='username'),
        ),
        migrations.AddField(
            model_name='questionlabel',
            name='questionId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='questions.Question'),
        ),
        migrations.AddField(
            model_name='label',
            name='possibleValues',
            field=models.ManyToManyField(to='questions.LabelValue'),
        ),
        migrations.AddField(
            model_name='question',
            name='examId',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='questions.Exam'),
            preserve_default=False,
        ),
    ]
